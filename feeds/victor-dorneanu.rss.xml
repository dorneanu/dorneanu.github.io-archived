<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog.dornea.nu</title><link>http://blog.dornea.nu/</link><description>Hack, code and drink some țuică. Personal blog of Victor Dorneanu.</description><atom:link href="http://blog.dornea.nu/feeds/victor-dorneanu.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 26 Jan 2016 00:00:00 +0100</lastBuildDate><item><title>Some words on CSRF and cookies</title><link>http://blog.dornea.nu/2016/01/26/some-words-on-csrf-and-cookies</link><description>&lt;p&gt;Being involved in different projects where web technologies are used, I have to make sure that &lt;a href="http://blog.dornea.nu/tag/appsec/"&gt;AppSec&lt;/a&gt; related security nightmares
are avoided. One of those security nightmare - and in my own oppinion the most complicated one to explain to a &lt;strong&gt;non-sec&lt;/strong&gt; person - is &lt;a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet"&gt;CSRF&lt;/a&gt;. I won't go into details ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 26 Jan 2016 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2016-01-26:2016/01/26/some-words-on-csrf-and-cookies</guid><category>appsec</category><category>web</category><category>javascript</category><category>csrf</category></item><item><title>No DNAT to localhost</title><link>http://blog.dornea.nu/2016/01/20/no-dnat-to-localhost</link><description>&lt;p&gt;Doing a simple &lt;strong&gt;port forwarding&lt;/strong&gt; is actually a simple task:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;iptables -A PREROUTING -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j REDIRECT --to-ports 8080
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would redirect all traffic from &lt;code&gt;80&lt;/code&gt; to &lt;code&gt;8080&lt;/code&gt;. But if you have some &lt;strong&gt;firewall&lt;/strong&gt; activated, you'll have to &lt;strong&gt;allow&lt;/strong&gt; both ports:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;iptables -A INPUT -p tcp --dport ...&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 20 Jan 2016 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2016-01-20:2016/01/20/no-dnat-to-localhost</guid><category>note</category><category>iptables</category><category>linux</category><category>networking</category></item><item><title>HowTo: Put nginx and PHP to jail in Debian 8</title><link>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8</link><description>&lt;p&gt;Although I thought this would be an easy task, it turned out that &lt;strong&gt;chrooting&lt;/strong&gt; daemons takes more than copying config files and libraries. There are donzens of tutorials out there how to do it, but the devil lies in detail - as always. Setting up a chroot environment is easy. But ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 15 Jan 2016 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2016-01-15:2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8</guid><category>nginx</category><category>php</category><category>admin</category><category>debian</category><category>chroot</category><category>security</category></item><item><title>Video editing with ffmpeg and kdenlive</title><link>http://blog.dornea.nu/2016/01/08/video-editing-with-ffmpeg-and-kdenlive</link><description>&lt;p&gt;Having recently bought a brand new &lt;a href="http://www.sony.net/Products/actioncam/en-us/support/cameras/HDR-AS200V/"&gt;Sony Action Cam HDR-AS200v&lt;/a&gt; I wanted to do some video editing. I've used &lt;a href="https://www.blender.org"&gt;Blender&lt;/a&gt; before but at some point of time it was to over-bloated and to complicated for some video editing tasks. So I've had a look at &lt;a href="https://kdenlive.org"&gt;kdenlive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Due to ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 08 Jan 2016 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2016-01-08:2016/01/08/video-editing-with-ffmpeg-and-kdenlive</guid><category>note</category><category>ffmpeg</category><category>kdenlive</category><category>video</category></item><item><title>OpenVPN for paranoids</title><link>http://blog.dornea.nu/2015/11/17/openvpn-for-paranoids</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Continuing my &lt;a href="http://blog.dornea.nu/tag/admin/"&gt;admin&lt;/a&gt; series this time I'd like to setup a &lt;strong&gt;VPN&lt;/strong&gt; using &lt;a href="https://openvpn.net"&gt;OpenVPN  &lt;/a&gt; as &lt;strong&gt;user-based&lt;/strong&gt; VPN solution. Unlike &lt;em&gt;IPSec&lt;/em&gt; solutions which require IPSec on both (server and client) sides, securing the VPN tunnel by &lt;strong&gt;OpenSSL&lt;/strong&gt; is a more preferable option.&lt;/p&gt;
&lt;p&gt;In this post I'll try to show ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 17 Nov 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-11-17:2015/11/17/openvpn-for-paranoids</guid><category>networking</category><category>openvpn</category><category>ssl</category><category>tls</category><category>iptables</category><category>crypto</category><category>ipython</category><category>admin</category><category>openssl</category><category>x509</category><category>firewall</category><category>vpn</category><category>openvpn</category></item><item><title>Advanced inter VLAN switching using Cisco</title><link>http://blog.dornea.nu/2015/11/06/advanced-inter-vlan-switching-using-cisco</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Continuing my &lt;a href="http://blog.dornea.nu/tag/ccna/"&gt;CCNA&lt;/a&gt; journey I'd like to address &lt;em&gt;inter VLAN switching&lt;/em&gt; in a more detailed way. In this post I'll configure my &lt;a href="http://blog.dornea.nu/2015/10/21/basic-layer-2-switching-using-cisco-packet-tracer/"&gt;previous topology&lt;/a&gt; to use &lt;strong&gt;VTP&lt;/strong&gt; and let &lt;strong&gt;STP&lt;/strong&gt; prevent &lt;em&gt;frame looping&lt;/em&gt; and other "anomalies" on &lt;em&gt;Layer 2&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="7dfe9f8b72b6b867a15156adb302c9cc"&gt;Updated network topology&lt;a class="anchor-link" href="#Updated-network-topology"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In [35]:
&lt;/div&gt;
&lt;div class="collapseheader box-flex1"&gt;&lt;span style="font-weight: bold;"&gt;Expand Code&lt;/span&gt;
&lt;div class="input_area box-flex1" style="display:none"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;blockdiag&lt;/span&gt;
&lt;span class="n"&gt;diagram ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 06 Nov 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-11-06:2015/11/06/advanced-inter-vlan-switching-using-cisco</guid><category>networking</category><category>cisco</category><category>ccna</category><category>layer 2</category><category>switch</category><category>vlan</category><category>vtp</category><category>stp</category><category>ipython</category><category>admin</category></item><item><title>Basic Layer 2 Switching using Cisco Packet Tracer</title><link>http://blog.dornea.nu/2015/10/21/basic-layer-2-switching-using-cisco-packet-tracer</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;As a pseudo-preparation for my &lt;a href="http://www.cisco.com/web/learning/certifications/associate/ccna/index.html"&gt;CCNA&lt;/a&gt; exam I wanted to sum up some of the &lt;em&gt;basic&lt;/em&gt; configuration steps related to &lt;strong&gt;Cisco&lt;/strong&gt; switches. Although I won't handle &lt;em&gt;every&lt;/em&gt; topic related to Layer 2, I will assume you have already some network knowledge. The main reason for this post is to ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 21 Oct 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-10-21:2015/10/21/basic-layer-2-switching-using-cisco-packet-tracer</guid><category>networking</category><category>cisco</category><category>ccna</category><category>layer 2</category><category>switch</category><category>vlan</category><category>ipython</category><category>admin</category></item><item><title>Manage PKI using OpenSSL</title><link>http://blog.dornea.nu/2015/10/02/manage-pki-using-openssl</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In the previous X.509 related &lt;a href="http://blog.dornea.nu/2015/05/24/validating-and-pinning-x509-certificates/"&gt;post&lt;/a&gt; I've had a look at the internals of a X.509 certficate. This time I want to setup my own &lt;a href="https://en.wikipedia.org/wiki/Public_key_infrastructure"&gt;PKI&lt;/a&gt; using some &lt;em&gt;open source&lt;/em&gt; software. This post is a preparation for setting up a VPN using &lt;em&gt;OpenVPN&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Before implementing the PKI ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-10-02:2015/10/02/manage-pki-using-openssl</guid><category>ssl</category><category>tls</category><category>openssl</category><category>crypto</category><category>python</category><category>ipython</category><category>admin</category><category>pki</category><category>openssl</category><category>x.509</category></item><item><title>Organizing and visualizing knowledge</title><link>http://blog.dornea.nu/2015/09/17/organizing-and-visualizing-knowledge</link><description>&lt;p&gt;I've been recently looking for some new ways organizing my notes/thoughts/tasks/bookmarks/whatever in order to keep things clean and &lt;em&gt;backup&lt;/em&gt; valuable information. After spending some time reading others efforts to do that, I've realized that mine were not that bad. Let me give you some ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 17 Sep 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-09-17:2015/09/17/organizing-and-visualizing-knowledge</guid><category>viz</category><category>pocket</category><category>xmind</category><category>tiddly</category><category>wiki</category></item><item><title>Debugging Android native shared libraries</title><link>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Since I haven't done this before, I thought I could share some experiences with you. All this began during some APK analysis which was heavily using &lt;a href="https://en.wikipedia.org/wiki/Java_Native_Interface"&gt;JNI&lt;/a&gt;s. In my particular case &lt;em&gt;Java Native Interfaces&lt;/em&gt; were used to call functions inside libraries written in C/C++. At that time ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 01 Jul 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-07-01:2015/07/01/debugging-android-native-shared-libraries</guid><category>ipython</category><category>hacking</category><category>security</category><category>android</category><category>python</category><category>mobile</category><category>appsec</category><category>eclipse</category><category>c</category><category>gdb</category></item><item><title>Decode Adobe Flex AMF protocol</title><link>http://blog.dornea.nu/2015/06/22/decode-adobe-flex-amf-protocol</link><description>&lt;p&gt;If you ever had the opportunity to pentest Flash applications you might have had problems analyzing the traffic between the client 
and the backend. An increasing number of (web) applications is using &lt;a href="http://www.adobe.com/products/flex.html"&gt;Adobe Flex&lt;/a&gt; at the 
presentation layer which uses the &lt;a href="https://en.wikipedia.org/wiki/Action_Message_Format"&gt;ActionScript Message Format (AMF)&lt;/a&gt; to send 
data back and ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 22 Jun 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-06-22:2015/06/22/decode-adobe-flex-amf-protocol</guid><category>note</category><category>burp</category><category>web</category><category>network</category><category>python</category><category>adobe</category><category>flash</category></item><item><title>usd AG Hacker Day in Hamburg</title><link>http://blog.dornea.nu/2015/06/03/usd-ag-hacker-day-in-hamburg</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Do you remember this &lt;a href="http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions/"&gt;usd AG hacker challenge write-up&lt;/a&gt;? This years &lt;a href="https://www.usd.de/akademie_/hackertag/"&gt;hacking event&lt;/a&gt; organized by the same company took place in &lt;strong&gt;Hamburg&lt;/strong&gt;. 9 hackers all over Germany were invited to pwn&amp;amp;0wn all the things. Every team was assigned a certain IP range that had to be pentested. Every host ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 03 Jun 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-06-03:2015/06/03/usd-ag-hacker-day-in-hamburg</guid><category>ipython</category><category>hacking</category><category>networking</category><category>security</category><category>usd</category><category>ctf</category><category>wargames</category><category>events</category></item><item><title>Validating and pinning X.509 certificates</title><link>http://blog.dornea.nu/2015/05/24/validating-and-pinning-x509-certificates</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In times of NSA, surveillance and data privacy, protecting your data has become an essential part of your every day life. A good understanding of basic principles is half the battle. In this post I just wanted to have look at SSL/TLS from a developer point of view but ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Sun, 24 May 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-05-24:2015/05/24/validating-and-pinning-x509-certificates</guid><category>python</category><category>coding</category><category>ipython</category><category>ssl</category><category>x.509</category><category>tls</category><category>crypto</category><category>openssl</category><category>appsec</category></item><item><title>Adding concurrency to smalisca</title><link>http://blog.dornea.nu/2015/05/06/adding-concurrency-to-smalisca</link><description>&lt;p&gt;When it comes to parallelism Python has some constraints which have to be taken into consideration
before starting coding. I think the biggest one has to do with the &lt;a href="https://wiki.python.org/moin/GlobalInterpreterLock"&gt;Global Interpreter Lock&lt;/a&gt; which prevents several threads from 
executing Python bytecodes at once. Nevertheless you may want to apply &lt;a href="http://en.wikipedia.org/wiki/Concurrency_pattern"&gt;concurrency patterns ...&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 06 May 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-05-06:2015/05/06/adding-concurrency-to-smalisca</guid><category>python</category><category>coding</category><category>smalisca</category></item><item><title>gethostbyname vs. getaddrinfo</title><link>http://blog.dornea.nu/2015/04/30/gethostbyname-vs-getaddrinfo</link><description>&lt;p&gt;After started coding in C &lt;a href="http://blog.dornea.nu/2015/04/21/coming-back-to-cc-after-2-years"&gt;again&lt;/a&gt; I've had a look
at some basic network stuff like: &lt;strong&gt;socket()&lt;/strong&gt;, &lt;strong&gt;connect()&lt;/strong&gt; etc. In order to resolve domain names, one was used to 
use &lt;strong&gt;gethostbyname()&lt;/strong&gt;. I've used this function in all my previous C projects but this one seems to be out-dated ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 30 Apr 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-04-30:2015/04/30/gethostbyname-vs-getaddrinfo</guid><category>c</category><category>coding</category><category>networking</category></item><item><title>Coming back to C/C++ after 2 years</title><link>http://blog.dornea.nu/2015/04/21/coming-back-to-cc-after-2-years</link><description>&lt;p&gt;After years of &lt;a href="http://blog.dornea.nu/tag/python/"&gt;python&lt;/a&gt; hacking and all kind of projects (like
&lt;a href="https://github.com/dorneanu/netgrafio"&gt;netgrafio&lt;/a&gt; or &lt;a href="https://github.com/dorneanu/smalisca"&gt;smalisca&lt;/a&gt;) I wanted to do more low-level stuff and refresh my C/C++ skills. I'll try to describe how it feels like coming back to C/C++ after 2 years of coding abstinence.&lt;/p&gt;
&lt;h3 id="a3ced014885bd6e2e6679c5c297c914d"&gt;It's low ...&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 21 Apr 2015 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2015-04-21:2015/04/21/coming-back-to-cc-after-2-years</guid><category>c</category><category>coding</category></item><item><title>usd AG Hacker challenge 2015 - Solutions</title><link>http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.usd.de"&gt;usd AG&lt;/a&gt; has announced a &lt;a href="https://www.usd.de/usd-hackertag-2015/"&gt;hacking challenge&lt;/a&gt; I have participated at. The target system was available at &lt;a href="http://82.195.79.41/"&gt;http://82.195.79.41/&lt;/a&gt;. Now let me sum up thg steps that have been required in order to get &lt;strong&gt;all&lt;/strong&gt; 6 tokens.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In [122]:
&lt;/div&gt;
&lt;div class="collapseheader box-flex1"&gt;&lt;span style="font-weight: bold;"&gt;Expand Code&lt;/span&gt;
&lt;div class="input_area box-flex1" style="display:none"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlite3 ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 18 Mar 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-03-18:2015/03/18/usd-ag-hacker-challenge-2015-solutions</guid><category>android</category><category>hacking</category><category>networking</category><category>security</category><category>ipython</category><category>ctf</category><category>usd</category><category>wargames</category></item><item><title>The iOS 8.1.3 fiasco</title><link>http://blog.dornea.nu/2015/02/26/the-ios-813-fiasco</link><description>&lt;p&gt;From time to time we all seem to ignore the "voice of reason" and tend to 
unconsidered actions. This will be a short summary of what could go wrong 
when one is forced to quick reactions which will result in chaos.&lt;/p&gt;
&lt;p&gt;All started with an &lt;a href="http://en.wikipedia.org/wiki/IPad_Air"&gt;iPad Air&lt;/a&gt;. I have
jailbroken ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 26 Feb 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-02-26:2015/02/26/the-ios-813-fiasco</guid><category>mobile</category><category>ios</category><category>apple</category><category>misc</category><category>update</category></item><item><title>Android remote sniffing using Tcpdump, nc and Wireshark</title><link>http://blog.dornea.nu/2015/02/20/android-remote-sniffing-using-tcpdump-nc-and-wireshark</link><description>&lt;p&gt;If you want to sniff your devices traffic and visualize it on Wireshark, you'll need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tcpdump&lt;/li&gt;
&lt;li&gt;netcat&lt;/li&gt;
&lt;li&gt;wireshark/tshark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you have &lt;code&gt;tcpdump&lt;/code&gt; installed on your machine. I &lt;em&gt;highly&lt;/em&gt; recommend you installing 
the &lt;a href="https://play.google.com/store/apps/details?id=org.dyndns.sven_ola.debian_kit&amp;amp;hl=en"&gt;Debian Kit&lt;/a&gt; 
which I've been using for years now. It makes things less complicated ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 20 Feb 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-02-20:2015/02/20/android-remote-sniffing-using-tcpdump-nc-and-wireshark</guid><category>note</category><category>network</category><category>android</category><category>mobile</category></item><item><title>Redirect Androids traffic to Burp</title><link>http://blog.dornea.nu/2015/02/19/redirect-androids-traffic-to-burp</link><description>&lt;p&gt;If you want to redirect you Android devices traffic to your Burp instance, you'll just have to use &lt;strong&gt;DNAT&lt;/strong&gt;
and &lt;strong&gt;MASQUERADING&lt;/strong&gt;. I was more detailed about this topic in &lt;a href="http://blog.dornea.nu/2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp/"&gt;this&lt;/a&gt;
post. And since the Internet is full of misleading information these are the steps to get it working. 
A ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 19 Feb 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-02-19:2015/02/19/redirect-androids-traffic-to-burp</guid><category>note</category><category>android</category><category>mobile</category><category>iptables</category><category>network</category></item><item><title>Android Hacker's Handbook</title><link>http://blog.dornea.nu/2015/01/15/android-hackers-handbook</link><description>&lt;p&gt;&lt;img class="img-responsive" src="http://dl.dornea.nu/img/2015/18add683b7e400d63d7172be60eb564a.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;What should I say about this book? A lot has been said and this uppon reasonable grounds. This book is meant to give
you an overview of the most important security topics related to Android. Not only you'll
get a lot of stuff about Android's internals, you'll ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 15 Jan 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-01-15:2015/01/15/android-hackers-handbook</guid><category>books</category><category>android</category><category>mobile</category></item><item><title>A practical guide to Advanced Networking</title><link>http://blog.dornea.nu/2015/01/08/a-practical-guide-to-advanced-networking</link><description>&lt;p&gt;During the past months I was from time to time reading all kind of stuff related to networking and security. During this process I came accross this book:&lt;/p&gt;
&lt;p&gt;&lt;img class="img-responsive" src="http://dl.dornea.nu/img/2015/3b9c034b88c3d5ea44bd4d6bc4436c0f.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I found this book to be very comprehensive and very modern in sense of current topics
across the "network universe". If you ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 08 Jan 2015 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2015-01-08:2015/01/08/a-practical-guide-to-advanced-networking</guid><category>books</category><category>networking</category><category>cisco</category></item><item><title>2014 - Personal review</title><link>http://blog.dornea.nu/2014/12/22/2014-personal-review</link><description>&lt;p&gt;Well, where should I start? Looking back at my blog &lt;a href="http://blog.dornea.nu/archives"&gt;archives&lt;/a&gt; I've realized 2014 "year of the &lt;a href="http://blog.dornea.nu/tag/mobile/"&gt;mobile&lt;/a&gt; apps" - at least for me. I was heavily involved in analyzing mobile 
applications: &lt;em&gt;Android&lt;/em&gt; and &lt;em&gt;iOS&lt;/em&gt;. For the first time in my whole infosec career path I was disassembling &lt;a href="http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis/"&gt;iOS&lt;/a&gt; applications ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 22 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-12-22:2014/12/22/2014-personal-review</guid><category>misc</category><category>infosec</category><category>appsec</category><category>hacking</category><category>networking</category><category>android</category><category>python</category></item><item><title>Import Burp cert into Android</title><link>http://blog.dornea.nu/2014/12/03/import-burp-cert-into-android</link><description>&lt;p&gt;As already mentioned in previous posts, in order to install Burps CA certificate, just go to the IP address Burp is listening on, followed by &lt;em&gt;/cert&lt;/em&gt;, e.g. &lt;code&gt;http://127.0.0.1:8080/cert&lt;/code&gt;. There you can download the cert and push it to your Android device. Usually you ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 03 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-12-03:2014/12/03/import-burp-cert-into-android</guid><category>note</category><category>burp</category><category>android</category></item><item><title>HowTo: Proxy Non-Proxy-Aware Android Applications through Burp</title><link>http://blog.dornea.nu/2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp</link><description>&lt;p&gt;Proxying HTTP(s) traffic from Android devices through Burp should be actually no magic. Nevertheless you'll have to take some important steps into consideration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install Burps &lt;strong&gt;CA cert&lt;/strong&gt; on the device&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I usually access Burp directly and download the cert file (&lt;code&gt;cacert.crt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If Burp is listening on &lt;code&gt;192 ...&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 02 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-12-02:2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp</guid><category>android</category><category>appsec</category><category>linux</category><category>howto</category><category>mobile</category><category>burp</category><category>networking</category><category>iptables</category><category>firewall</category></item><item><title>Re-Root Nexus 10 4.x</title><link>http://blog.dornea.nu/2014/12/02/re-root-nexus-10-4x</link><description>&lt;p&gt;I wrote this since I always forget the 2 essential steps in order to regain &lt;strong&gt;root&lt;/strong&gt; on a Nexus 10 device which has been updated over-the-air. Basically you'll have to flash a new &lt;strong&gt;recovery&lt;/strong&gt; image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# ~/android-sdk/platform-tools/fastboot flash recovery recovery-clockwork-touch-6.0.4.3-manta.img
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before booting into &lt;em&gt;recovery ...&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 02 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-12-02:2014/12/02/re-root-nexus-10-4x</guid><category>note</category><category>android</category></item><item><title>Using Graphviz with Pelican and liquid tags</title><link>http://blog.dornea.nu/2014/11/13/using-graphviz-with-pelican-and-liquid-tags</link><description>&lt;p&gt;I really like keeping things simple. And I also like generating figures from code using &lt;code&gt;Graphviz&lt;/code&gt;. And since there was no Graphviz &lt;strong&gt;plugin&lt;/strong&gt; for &lt;strong&gt;pelican&lt;/strong&gt; I wrote my own one. &lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/liquid_tags"&gt;liquid tags&lt;/a&gt; I wanted to get my graphviz code rendered and automatically included as a &lt;strong&gt;base64 encoded&lt;/strong&gt; image in ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 13 Nov 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-11-13:2014/11/13/using-graphviz-with-pelican-and-liquid-tags</guid><category>pelican</category><category>graphviz</category><category>viz</category><category>python</category></item><item><title>HowTo: iOS Apps - Static analysis</title><link>http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis</link><description>&lt;p&gt;In this short article I'll try to explain what are the main steps to analyze an iOS app. Since I've writen similar posts related to &lt;a href="/tag/android/"&gt;Android&lt;/a&gt; I thought I could devote some of spare time writing about the steps required to analyze iOS apps/binaries. But first of ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 29 Oct 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-10-29:2014/10/29/howto-ios-apps-static-analysis</guid><category>coding</category><category>security</category><category>ios</category><category>appsec</category><category>howto</category><category>mobile</category></item><item><title>Generate all IP addresses from ASN</title><link>http://blog.dornea.nu/2014/09/17/generate-all-ip-addresses-from-asn</link><description>&lt;p&gt;Sometimes you need to know if a certain IP (or several ones) are within an IP range or belong to a certain &lt;a href="http://en.wikipedia.org/wiki/Autonomous_System_%28Internet%29"&gt;ASN&lt;/a&gt;. Let's give it a try and generate all possible IP addresses for &lt;a href="http://telekom.de"&gt;telekom.de&lt;/a&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dig telekom.de 
...
telekom.de.     &lt;span class="m"&gt;86346&lt;/span&gt;   IN  A   46.29.100.76 ...&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 17 Sep 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-09-17:2014/09/17/generate-all-ip-addresses-from-asn</guid><category>networking</category><category>hacking</category><category>ipv4</category><category>python</category></item><item><title>HowTo: Androguard with Docker</title><link>http://blog.dornea.nu/2014/09/12/howto-androguard-with-docker</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Meanwhile I think I've felt in love with &lt;em&gt;Androguard&lt;/em&gt;. I love its Pythonic way handling things and its visualizations features. As many of you have noticed, you can run Androguard inside a &lt;em&gt;Docker&lt;/em&gt; container. I've never used Docker before so it was about time. You can find some ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Fri, 12 Sep 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-09-12:2014/09/12/howto-androguard-with-docker</guid><category>ipython</category><category>python</category><category>androguard</category><category>android</category><category>docker</category><category>howto</category><category>networking</category><category>mobile</category><category>appsec</category><category>iptables</category></item><item><title>Using JQuery DataTables with IPython</title><link>http://blog.dornea.nu/2014/08/28/using-jquery-datatables-with-ipython</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I thought this might be interesting enough to share with you. Every time I'm working with DataFrames I somehow miss the search feature: I'd like to search for certain patterns inside the columns and rows. I used to use &lt;a href="https://datatables.net"&gt;JQuery DataTables&lt;/a&gt; for &lt;a href="http://dornea.nu/projects/netgrafio"&gt;netgrafio&lt;/a&gt;. But I couldn't find ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 28 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-08-28:2014/08/28/using-jquery-datatables-with-ipython</guid><category>ipython</category><category>python</category><category>jquery</category><category>javascript</category></item><item><title>HowTo: Debug Android APKs with Eclipse and DDMS</title><link>http://blog.dornea.nu/2014/08/21/howto-debug-android-apks-with-eclipse-and-ddms</link><description>&lt;p&gt;Simply out of necessity I've written this mini-tutorial how debug android APKs using Eclipse and &lt;a href="http://developer.android.com/tools/debugging/ddms.html"&gt;DDMS&lt;/a&gt;. 
After hours of wild googling these are the steps to make your APK debuggable under Eclipse. I'll be using the &lt;code&gt;FakeBanker&lt;/code&gt; APK reverse-engineered in previous &lt;a href="http://blog.dornea.nu/tag/android/"&gt;articles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="fd88b11cfde6aa5e3c7ff0553b534885"&gt;Revisions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;UPDATE 2014-12-09&lt;/em&gt;&lt;/strong&gt;: &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before looking at ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 21 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-08-21:2014/08/21/howto-debug-android-apks-with-eclipse-and-ddms</guid><category>android</category><category>eclipse</category><category>java</category><category>debug</category><category>howto</category><category>mobile</category><category>fakebanker</category><category>appsec</category></item><item><title>Python for Data Analysis</title><link>http://blog.dornea.nu/2014/08/06/python-for-data-analysis</link><description>&lt;p&gt;I use &lt;code&gt;Python&lt;/code&gt; on daily basis. I love &lt;code&gt;IPython&lt;/code&gt; and use it as my main &lt;em&gt;shell&lt;/em&gt; for every day tasks. So it was a matter of time until I got captivated by &lt;code&gt;panda&lt;/code&gt;, &lt;code&gt;scipy&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. I've ordered myself &lt;a href="http://shop.oreilly.com/product/0636920023784.do"&gt;&lt;em&gt;Python for Data Analysis&lt;/em&gt;&lt;/a&gt; in order to get more familiar ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 06 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-08-06:2014/08/06/python-for-data-analysis</guid><category>science</category><category>web</category><category>python</category><category>ipython</category><category>books</category></item><item><title>Web Application Survey Tutorial</title><link>http://blog.dornea.nu/2014/08/06/web-application-survey-tutorial</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Suppose you get a list of some URLs and you are asked to "investigate" them. The list is full of some random URLs related to your company and nobody knows about. You don't have a clue who is responsible for them nor which applications (if any) are running behind ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 06 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-08-06:2014/08/06/web-application-survey-tutorial</guid><category>ipython</category><category>appsec</category><category>web</category><category>python</category></item><item><title>Android Dynamic Code Analysis - Mastering DroidBox</title><link>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this article I'll have a a closer look at &lt;a href="https://code.google.com/p/droidbox/"&gt;DroidBox&lt;/a&gt; which provides a mobile sandbox to look at Android applications. In the previous &lt;a href="/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/"&gt;post&lt;/a&gt; I've dealt with &lt;em&gt;static code analysis&lt;/em&gt;. This time will start running our malicious application and look at the "noise" it generates. That would ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 05 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-08-05:2014/08/05/android-dynamic-code-analysis-mastering-droidbox</guid><category>android</category><category>hacking</category><category>networking</category><category>security</category><category>ipython</category><category>code</category><category>sca</category><category>androguard</category><category>re</category><category>droidbox</category><category>mobile</category><category>fakebanker</category><category>appsec</category><category>javascript</category></item><item><title>Disect Android APKs like a Pro - Static code analysis</title><link>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I've started writing this &lt;a href="http://ipython.org/notebook.html"&gt;IPython notebook&lt;/a&gt; in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available &lt;a href="http://en.wikipedia.org/wiki/Reverse_engineering"&gt;RE&lt;/a&gt; tools and learn more about their pros &amp;amp; cos. In particular I had a closer ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 07 Jul 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-07-07:2014/07/07/disect-android-apks-like-a-pro-static-code-analysis</guid><category>android</category><category>hacking</category><category>networking</category><category>security</category><category>ipython</category><category>code</category><category>sca</category><category>androguard</category><category>re</category><category>mobile</category><category>fakebanker</category><category>appsec</category></item><item><title>On Java, OpenSSL, Crypto, Blowfish and stuff</title><link>http://blog.dornea.nu/2014/07/01/on-java-openssl-crypto-blowfish-and-stuff</link><description>&lt;p&gt;During some Android malware analysis I came along some Java routines which were meant to decrypt/encrypt some content. Nothing special about it. The key had to be extracted from a file and the encrypted file was in Base64. After unsuccessfully trying &lt;strong&gt;openssl&lt;/strong&gt; in order to decrypt the file I ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 01 Jul 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-07-01:2014/07/01/on-java-openssl-crypto-blowfish-and-stuff</guid><category>java</category><category>cryptography</category><category>crypto</category><category>openssl</category><category>ssl</category><category>tls</category><category>coding</category><category>python</category></item><item><title>WhatsApp bot</title><link>http://blog.dornea.nu/2014/06/29/whatsapp-bot</link><description>&lt;p&gt;&lt;img class="img-responsive" src="http://dl.dornea.nu/img/2014/9435906d7dc8d3f01b92cebc191eb9ab.png"/&gt;&lt;/p&gt;
&lt;p&gt;This is what I've received yesterday from some phone number I don't really know. BTW: Which countrys prefix is that? The crazy thing about it: Every time I was sending a message to it, it responded with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you. We have received your message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had a look ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Sun, 29 Jun 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-06-29:2014/06/29/whatsapp-bot</guid><category>whatsapp</category><category>wtf</category><category>misc</category></item><item><title>Migrate this blog from Octopress to Pelican</title><link>http://blog.dornea.nu/2014/06/18/migrate-this-blog-from-octopress-to-pelican</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;A few weeks ago I'be migrated my whole blog from Wordpress to Octopress. Meanwhile I've discovered &lt;code&gt;Pelican&lt;/code&gt; which is the Pythonic alternative to Octopress. To be honest: The main reason I'm using Pelican instead of Octopress is the ability to import/include &lt;code&gt;IPython notebooks&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;After I've ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 18 Jun 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-06-18:2014/06/18/migrate-this-blog-from-octopress-to-pelican</guid><category>blog</category><category>ipython</category><category>python</category><category>pelican</category><category>octopress</category></item><item><title>Googles XSS Game - Solutions</title><link>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions</link><description>&lt;p&gt;These are my steps how I've solved the &lt;a href="https://xss-game.appspot.com/"&gt;XSS Game&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="5afaf1679ad0887adebaddb40e0bd3f7"&gt;Level 1&lt;/h2&gt;
&lt;p&gt;This is the most obvious and easiest one. Just insert following code and you're done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="228e9da47384bacde793a2b78d488bb0"&gt;Level 2&lt;/h2&gt;
&lt;p&gt;Since the &lt;code&gt;script&lt;/code&gt; won't work you'll have to think of another tags to ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 02 Jun 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-06-02:2014/06/02/googles-xss-game-solutions</guid><category>web</category><category>wargames</category><category>security</category><category>coding</category><category>hacking</category><category>xss</category><category>google</category><category>javascript</category></item><item><title>BerlinSides 0x05</title><link>http://blog.dornea.nu/2014/05/27/berlinsides-0x05</link><description>&lt;p&gt;The &lt;a href="http://berlinsides.org/"&gt;&lt;strong&gt;BerlinSides&lt;/strong&gt;&lt;/a&gt; is a conference from hacker for hacker. This years motto was: &lt;strong&gt;...you ain't listening&lt;/strong&gt;.
All my greetings go to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nullsecurity.net"&gt;nullsecurity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/thealuc"&gt;Aluc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.universalhall.de/"&gt;Universal Hall Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Nullsecurity @ BerlinSides 0x05" class="img-responsive" src="http://dl.dornea.nu/img/2014/berlinsides/382f305b366cbb0d544207ae28eff003.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="BerlinSides" class="img-responsive" src="http://dl.dornea.nu/img/2014/berlinsides/48aa1cf9082a5fab4172f49cb2f890c3.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="BerlinSides" class="img-responsive" src="http://dl.dornea.nu/img/2014/berlinsides/799eb9f276fed2ef043b83af21c41094.jpg"/&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 27 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-05-27:2014/05/27/berlinsides-0x05</guid><category>events</category><category>hacking</category><category>security</category><category>berlinsides</category></item><item><title>HowTo: Write pentest reports the easy way</title><link>http://blog.dornea.nu/2014/05/20/howto-write-pentest-reports-the-easy-way</link><description>&lt;p&gt;In this post I'll try to share an idea I've had regarding pentest reports. Most of you surely have
their own methods and tools to create nice looking reports after have done some pentesting.
Since I try to keep things simple I'll give you a rough idea ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 20 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2014-05-20:2014/05/20/howto-write-pentest-reports-the-easy-way</guid><category>graphviz</category><category>pandoc</category><category>misc</category><category>python</category><category>viz</category></item><item><title>24h Android sniffing using tcpdump - IPython Notebook Version</title><link>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version</link><description>&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="614db13e08f135ac46011bb440aaa3a1"&gt;Motivation&lt;a class="anchor-link" href="#Motivation"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I've started this little project since I was mainly interested in the data my smartphone is sending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 23 Jan 2014 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2014-01-23:2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version</guid><category>android</category><category>hacking</category><category>networking</category><category>security</category><category>ipython</category><category>appsec</category></item><item><title>Find out your geolocation via MAC address</title><link>http://blog.dornea.nu/2010/10/07/find-out-your-geolocation-via-mac-address</link><description>&lt;p&gt;Today I found a very interesting article about geoposition localisation based on MAC addresses. MAC addresses ? Yeah, right! As securiteam described &lt;a href="http://blogs.securiteam.com/index.php/archives/1450"&gt;here&lt;/a&gt; it is possible to find out your location using Google's Location Services REST API. Further information can be found on Dinis Cruz &lt;a href="http://diniscruz.blogspot.com/2010/10/using-mac-address-to-find-your-physical.html"&gt;blog&lt;/a&gt;. But where is all ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 07 Oct 2010 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2010-10-07:2010/10/07/find-out-your-geolocation-via-mac-address</guid><category>networking</category><category>security</category><category>android</category><category>mac</category></item><item><title>Sommersemester 2010 online!</title><link>http://blog.dornea.nu/2010/07/26/sommersemester-2010-online</link><description>&lt;p&gt;Ich habe mir die Mühe gemacht, in meinem Studium fÃ¼r ein bisschen Ordnung zu sorgen. Ab sofort sind die Vorlesungsmaterialien sowie die Aufgabenzettel (Lösungen) des letzten Semesters (Sommersemester 2010) &lt;a href="http://git.dornea.nu/studium/tree/master/sose2010"&gt;online&lt;/a&gt;! Solltet ihr geheime Skripte und Aufgabensammlungen bei euch auf der Festplatte aufbewahren, schreibt mir ne Mail. Vielleicht einigen wir uns ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 26 Jul 2010 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2010-07-26:2010/07/26/sommersemester-2010-online</guid><category>misc</category><category>german</category><category>studium</category></item><item><title>Word lists/dictionaries compilation</title><link>http://blog.dornea.nu/2010/04/01/word-listsdictionaries-compilation</link><description>&lt;p&gt;I've been following securityfocus.com pen-test mailinglist and found some quite usefull links related to word lists/dictionaries. I'll try to keep the list up2date, so you're submissions are welcome.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://www.skullsecurity.org/wiki/index.php/Passwords&lt;/li&gt;
&lt;li&gt;Kevin’s word lists: http://wordlist.sourceforge.net/&lt;/li&gt;
&lt;li&gt;http ...&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 01 Apr 2010 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2010-04-01:2010/04/01/word-listsdictionaries-compilation</guid><category>cracking</category></item><item><title>Keep your system up2date!</title><link>http://blog.dornea.nu/2009/09/07/keep-your-system-up2date</link><description>&lt;p&gt;Due to NetBSD’s great packaging system, software gets updated very frequently. It is very important to have a clean and safe system running and no outdated packages on your system. They might be vulnerable to recently discovered bugs and affect your systems’s security and performance. After updating the ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 07 Sep 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-09-07:2009/09/07/keep-your-system-up2date</guid><category>misc</category><category>netbsd</category><category>admin</category><category>update</category></item><item><title>NetBSD, kernel downgrade and some voodoo!</title><link>http://blog.dornea.nu/2009/08/20/netbsd-kernel-downgrade-and-some-voodoo</link><description>&lt;p&gt;I don't know if you still remember my ACPI suspend/resume problems a few months ago. I once suspended my Linux system to RAM and forgotten to make a proper shutdown. After a while the battery discharged and my laptop was out of power. After some reboots (there were ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 20 Aug 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-08-20:2009/08/20/netbsd-kernel-downgrade-and-some-voodoo</guid><category>misc</category><category>netbsd</category><category>update</category></item><item><title>HowTo: SSH-Tunnel over CorkScrew using Tor</title><link>http://blog.dornea.nu/2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor</link><description>&lt;p&gt;Nowadays it seems like we're loosing our privacy and are being taped by video cameras all over. The same applies to Internet surveillance: By daily traffic analysis you can find out who is talking to whom over a public network. This traffic allows others to track your click behaviour ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 05 Aug 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-08-05:2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor</guid><category>hacking</category><category>howto</category><category>networking</category><category>security</category><category>ssh</category><category>tor</category><category>tools</category></item><item><title>CoWPAtty 4.2 for NetBSD</title><link>http://blog.dornea.nu/2009/07/22/cowpatty-42-for-netbsd</link><description>&lt;p&gt;From &lt;a href="http://wirelessdefence.org/Contents/coWPAttyMain.htm"&gt;http://wirelessdefence.org/Contents/coWPAttyMain.htm&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;coWPAtty is designed to audit the pre-shared key (PSK) selection for WPA networks based on the TKIP protocol.&lt;/em&gt; - Joshua Wright.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since I had problems installing/compiling cowpatty, I had to modify the Makefile and several include-lines in some files. Currently I'm using ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 22 Jul 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-07-22:2009/07/22/cowpatty-42-for-netbsd</guid><category>security</category><category>netbsd</category><category>tools</category></item><item><title>Ganxtaville52 Luebecker Hood</title><link>http://blog.dornea.nu/2009/07/08/ganxtaville52-luebecker-hood</link><description>&lt;p&gt;&lt;a href="http://2.bp.blogspot.com/_cWvrXazPQTw/SlOIq2l9yPI/AAAAAAAAAAk/SQqIwr5zuI4/s320/P7070455.JPG" rel="lightbox" title="Ganxtaville 52"&gt;&lt;img alt="Ganxtaville 52" class="img-responsive" height="113" src="http://2.bp.blogspot.com/_cWvrXazPQTw/SlOIq2l9yPI/AAAAAAAAAAk/SQqIwr5zuI4/s320/P7070455.JPG" style="float: left; padding-right: 10px;" title="Ganxtaville 52" width="150"/&gt;&lt;/a&gt;Lieber Victor, wir wollen dir eine ganz besondere Ehre zu Teil kommen lassen und dir unseren offiziellen WG-Blog vorstellen:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ganxtaville52.blogspot.com/"&gt;http://www.ganxtaville52.blogspot.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Es ist etwas wirklich wertvolles, also teile diese festgehaltenen Momente auch nur mit Menschen, die dir wirklich nahe stehen und dir etwas bedeuten.&lt;/p&gt;
&lt;p&gt;Viel Spaß dabei ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 08 Jul 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-07-08:2009/07/08/ganxtaville52-luebecker-hood</guid><category>misc</category><category>german</category></item><item><title>OverTheWire: Vortex Level0</title><link>http://blog.dornea.nu/2009/05/21/overthewire-vortex-level0</link><description>&lt;p&gt;So what's this whole thing about? "The wargames offered by the OverTheWire community can help you to learn and practice security concepts in the form of funfilled games." by &lt;a href="http://www.overthewire.org/wargames/"&gt;OverTheWire.org&lt;/a&gt;. So I started with &lt;a href="http://www.overthewire.org/wargames/vortex/"&gt;Vortex&lt;/a&gt; and coded an example how to read 4 integers from server, sum them ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Thu, 21 May 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-05-21:2009/05/21/overthewire-vortex-level0</guid><category>coding</category><category>wargames</category><category>vortex</category><category>c</category></item><item><title>NetBSD rulez!</title><link>http://blog.dornea.nu/2009/05/05/netbsd-rulez</link><description>&lt;p&gt;I just started installing NetBSD on my 2nd laptop. Everything works like a charm! (thanks L. for your support xD) I was kind of sick of Linux/Debian and wanted to try something new. I made my decision and installed NetBSD due to its high portability: "Of course it runs ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 05 May 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-05-05:2009/05/05/netbsd-rulez</guid><category>misc</category><category>netbsd</category></item><item><title>Why use Python? The n00b mini-review</title><link>http://blog.dornea.nu/2009/04/07/why-use-python-the-n00b-mini-review</link><description>&lt;p&gt;I've been coding Python for almost one week. I really thank O'Reilly for their good quality and well structured books. If you ever plan to learn Python, just have a look at "Learning Python - 3rd Edition" by Mark Lutz. You'll love it! And you'll really get ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Tue, 07 Apr 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-04-07:2009/04/07/why-use-python-the-n00b-mini-review</guid><category>misc</category><category>python</category><category>coding</category></item><item><title>HowTo: Get SETOF from Array in PostgreSQL</title><link>http://blog.dornea.nu/2009/03/30/howto-get-setof-from-array-in-postgresql</link><description>&lt;p&gt;The use of so called "procedural languages" in PostgreSQL allows the user to write user-defined functions in other languages than SQL or C. Since every query is sent to the server, the database server has to know how to interpret and handle function statements. As the PostgreSQL documentation describes, the ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Mon, 30 Mar 2009 00:00:00 +0200</pubDate><guid>tag:blog.dornea.nu,2009-03-30:2009/03/30/howto-get-setof-from-array-in-postgresql</guid><category>coding</category><category>howto</category><category>sql</category><category>admin</category><category>postgresql</category></item><item><title>Bye Bye Immobilo!</title><link>http://blog.dornea.nu/2009/03/18/bye-bye-immobilo</link><description>&lt;p&gt;Wow! So schnell kann die Zeit vergehen...Vor ungefähr 5 Monaten wurde ein gewisser Victor D. in die Büroräume der Firma Golden Immobilien GmbH eingeladen. Grund dafür war ein anstehendes Vorstellungsgespräch. Damals wusste ich noch nicht, welche Herausforderungen mich im Laufe des Praktikums erwarten werden und welch Bereicherung meines Fachwissens ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 18 Mar 2009 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2009-03-18:2009/03/18/bye-bye-immobilo</guid><category>misc</category><category>job</category><category>german</category></item><item><title>Mod2Exec - Execute modules</title><link>http://blog.dornea.nu/2008/11/26/mod2exec-execute-modules</link><description>&lt;h2 id="487b8078002e86365e35ec0a4c61bb67"&gt;Einleitung&lt;/h2&gt;
&lt;p&gt;Wir leben in einer Zeit, in der Dynamik sowie Flexibilität eine große Rolle spielen. Wir alle besitzen bestimmte Fähigkeiten, die in bestimmten Situationen zum Einsatz kommen können. Das heißt, der Mensch braucht diese nur zur richtigen Zeit „aufzurufen“. Genauso soll ein Kernel, das Herzstück eines Betriebssystems, auch funktionieren: Die ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 26 Nov 2008 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2008-11-26:2008/11/26/mod2exec-execute-modules</guid><category>coding</category><category>security</category><category>vx</category><category>linux</category><category>kernel</category><category>german</category></item><item><title>Viral Infections on Linux</title><link>http://blog.dornea.nu/2008/11/26/viral-infections-on-linux</link><description>&lt;h2 id="487b8078002e86365e35ec0a4c61bb67"&gt;Einleitung&lt;/h2&gt;
&lt;p&gt;Wir leben in einem digitalen Zeitalter, in dem sich Technologien rasch weiterentwickeln und deren Präsenz für uns Menschen eine immer größer werdende Rolle spielt. Gleichzeitig erfahren wir eine Zunahme der Computer-Kriminalität, geprägt von mafiösen Strukturen, die sich zum Ziel gesetzt haben, Informationen im Eigeninteresse zu sammeln.&lt;/p&gt;
&lt;p&gt;Die Wichtigkeit dieser ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Dorneanu</dc:creator><pubDate>Wed, 26 Nov 2008 00:00:00 +0100</pubDate><guid>tag:blog.dornea.nu,2008-11-26:2008/11/26/viral-infections-on-linux</guid><category>security</category><category>vx</category><category>linux</category><category>malware</category><category>german</category></item></channel></rss>