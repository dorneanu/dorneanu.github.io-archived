<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.dornea.nu</title><link href="http://blog.dornea.nu/" rel="alternate"></link><link href="http://blog.dornea.nu/feeds/victor-dorneanu.atom.xml" rel="self"></link><id>http://blog.dornea.nu/</id><updated>2015-05-24T00:00:00+02:00</updated><entry><title>Validating and pinning X.509 certificates</title><link href="http://blog.dornea.nu/2015/05/24/validating-and-pinning-x509-certificates" rel="alternate"></link><updated>2015-05-24T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-05-24:2015/05/24/validating-and-pinning-x509-certificates</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In times of NSA, surveillance and data privacy, protecting your data has become an essential part of your every day life. A good understanding of basic principles is half the battle. In this post I just wanted to have look at SSL/TLS from a developer point of view but ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="python"></category><category term="coding"></category><category term="ipython"></category><category term="ssl"></category><category term="x509"></category><category term="tls"></category><category term="crypto"></category></entry><entry><title>Adding concurrency to smalisca</title><link href="http://blog.dornea.nu/2015/05/06/adding-concurrency-to-smalisca" rel="alternate"></link><updated>2015-05-06T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-05-06:2015/05/06/adding-concurrency-to-smalisca</id><summary type="html">&lt;p&gt;When it comes to parallelism Python has some constraints which have to be taken into consideration
before starting coding. I think the biggest one has to do with the &lt;a href="https://wiki.python.org/moin/GlobalInterpreterLock"&gt;Global Interpreter Lock&lt;/a&gt; which prevents several threads from 
executing Python bytecodes at once. Nevertheless you may want to apply &lt;a href="http://en.wikipedia.org/wiki/Concurrency_pattern"&gt;concurrency patterns ...&lt;/a&gt;&lt;/p&gt;</summary><category term="python"></category><category term="coding"></category><category term="programming"></category><category term="smalisca"></category></entry><entry><title>gethostbyname vs. getaddrinfo</title><link href="http://blog.dornea.nu/2015/04/30/gethostbyname-vs-getaddrinfo" rel="alternate"></link><updated>2015-04-30T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-04-30:2015/04/30/gethostbyname-vs-getaddrinfo</id><summary type="html">&lt;p&gt;After started coding in C &lt;a href="http://blog.dornea.nu/2015/04/21/coming-back-to-cc-after-2-years"&gt;again&lt;/a&gt; I've had a look
at some basic network stuff like: &lt;strong&gt;socket()&lt;/strong&gt;, &lt;strong&gt;connect()&lt;/strong&gt; etc. In order to resolve domain names, one was used to 
use &lt;strong&gt;gethostbyname()&lt;/strong&gt;. I've used this function in all my previous C projects but this one seems to be out-dated ...&lt;/p&gt;</summary><category term="c"></category><category term="coding"></category><category term="programming"></category></entry><entry><title>Coming back to C/C++ after 2 years</title><link href="http://blog.dornea.nu/2015/04/21/coming-back-to-cc-after-2-years" rel="alternate"></link><updated>2015-04-21T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-04-21:2015/04/21/coming-back-to-cc-after-2-years</id><summary type="html">&lt;p&gt;After years of &lt;a href="http://blog.dornea.nu/tag/python/"&gt;python&lt;/a&gt; hacking and all kind of projects (like
&lt;a href="https://github.com/dorneanu/netgrafio"&gt;netgrafio&lt;/a&gt; or &lt;a href="https://github.com/dorneanu/smalisca"&gt;smalisca&lt;/a&gt;) I wanted to do more low-level stuff and refresh my C/C++ skills. I'll try to describe how it feels like coming back to C/C++ after 2 years of coding abstinence.&lt;/p&gt;
&lt;h3 id="its-low-very-low"&gt;It's low ...&lt;/h3&gt;</summary><category term="c"></category><category term="coding"></category><category term="programming"></category></entry><entry><title>usd AG Hacker challenge 2015 - Solutions</title><link href="http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions" rel="alternate"></link><updated>2015-03-18T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-03-18:2015/03/18/usd-ag-hacker-challenge-2015-solutions</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.usd.de"&gt;usd AG&lt;/a&gt; has announced a &lt;a href="https://www.usd.de/usd-hackertag-2015/"&gt;hacking challenge&lt;/a&gt; I have participated at. The target system was available at &lt;a href="http://82.195.79.41/"&gt;http://82.195.79.41/&lt;/a&gt;. Now let me sum up thg steps that have been required in order to get &lt;strong&gt;all&lt;/strong&gt; 6 tokens.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
In&amp;nbsp;[122]:
&lt;/div&gt;

&lt;div class="collapseheader box-flex1"&gt;&lt;span style=""&gt;Expand Code&lt;/span&gt;
&lt;div class="input_area box-flex1" style="display:none"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlite3 ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="android"></category><category term="hacking"></category><category term="network"></category><category term="security"></category><category term="ipython"></category></entry><entry><title>The iOS 8.1.3 fiasco</title><link href="http://blog.dornea.nu/2015/02/26/the-ios-813-fiasco" rel="alternate"></link><updated>2015-02-26T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-02-26:2015/02/26/the-ios-813-fiasco</id><summary type="html">&lt;p&gt;From time to time we all seem to ignore the "voice of reason" and tend to 
unconsidered actions. This will be a short summary of what could go wrong 
when one is forced to quick reactions which will result in chaos.&lt;/p&gt;
&lt;p&gt;All started with an &lt;a href="http://en.wikipedia.org/wiki/IPad_Air"&gt;iPad Air&lt;/a&gt;. I have
jailbroken ...&lt;/p&gt;</summary><category term="mobile"></category><category term="ios"></category><category term="apple"></category><category term="misc"></category></entry><entry><title>Android remote sniffing using Tcpdump, nc and Wireshark</title><link href="http://blog.dornea.nu/2015/02/20/android-remote-sniffing-using-tcpdump-nc-and-wireshark" rel="alternate"></link><updated>2015-02-20T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-02-20:2015/02/20/android-remote-sniffing-using-tcpdump-nc-and-wireshark</id><summary type="html">&lt;p&gt;If you want to sniff your devices traffic and visualize it on Wireshark, you'll need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tcpdump&lt;/li&gt;
&lt;li&gt;netcat&lt;/li&gt;
&lt;li&gt;wireshark/tshark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you have &lt;code&gt;tcpdump&lt;/code&gt; installed on your machine. I &lt;em&gt;highly&lt;/em&gt; recommend you installing 
the &lt;a href="https://play.google.com/store/apps/details?id=org.dyndns.sven_ola.debian_kit&amp;amp;hl=en"&gt;Debian Kit&lt;/a&gt; 
which I've been using for years now. It makes things less complicated ...&lt;/p&gt;</summary><category term="note"></category><category term="network"></category><category term="android"></category><category term="mobile"></category></entry><entry><title>Redirect Androids traffic to Burp</title><link href="http://blog.dornea.nu/2015/02/19/redirect-androids-traffic-to-burp" rel="alternate"></link><updated>2015-02-19T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-02-19:2015/02/19/redirect-androids-traffic-to-burp</id><summary type="html">&lt;p&gt;If you want to redirect you Android devices traffic to your Burp instance, you'll just have to use &lt;strong&gt;DNAT&lt;/strong&gt;
and &lt;strong&gt;MASQUERADING&lt;/strong&gt;. I was more detailed about this topic in &lt;a href="http://blog.dornea.nu/2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp/"&gt;this&lt;/a&gt;
post. And since the Internet is full of misleading information these are the steps to get it working. 
A ...&lt;/p&gt;</summary><category term="note"></category><category term="android"></category><category term="mobile"></category><category term="iptables"></category><category term="network"></category></entry><entry><title>Android Hacker's Handbook</title><link href="http://blog.dornea.nu/2015/01/15/android-hackers-handbook" rel="alternate"></link><updated>2015-01-15T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-01-15:2015/01/15/android-hackers-handbook</id><summary type="html">&lt;p&gt;&lt;img src="http://dl.dornea.nu/img/2015/18add683b7e400d63d7172be60eb564a.jpg"&gt;&lt;/p&gt;
&lt;p&gt;What should I say about this book? A lot has been said and this uppon reasonable grounds. This book is meant to give
you an overview of the most important security topics related to Android. Not only you'll
get a lot of stuff about Android's internals, you'll ...&lt;/p&gt;</summary><category term="books"></category><category term="android"></category><category term="mobile"></category></entry><entry><title>A practical guide to Advanced Networking</title><link href="http://blog.dornea.nu/2015/01/08/a-practical-guide-to-advanced-networking" rel="alternate"></link><updated>2015-01-08T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2015-01-08:2015/01/08/a-practical-guide-to-advanced-networking</id><summary type="html">&lt;p&gt;During the past months I was from time to time reading all kind of stuff related to networking and security. During this process I came accross this book:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dl.dornea.nu/img/2015/3b9c034b88c3d5ea44bd4d6bc4436c0f.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I found this book to be very comprehensive and very modern in sense of current topics
across the "network universe". If you ...&lt;/p&gt;</summary><category term="books"></category><category term="network"></category></entry><entry><title>2014 - Personal review</title><link href="http://blog.dornea.nu/2014/12/22/2014-personal-review" rel="alternate"></link><updated>2014-12-22T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-12-22:2014/12/22/2014-personal-review</id><summary type="html">&lt;p&gt;Well, where should I start? Looking back at my blog &lt;a href="http://blog.dornea.nu/archives"&gt;archives&lt;/a&gt; I've realized 2014 "year of the &lt;a href="http://blog.dornea.nu/tag/mobile/"&gt;mobile&lt;/a&gt; apps" - at least for me. I was heavily involved in analyzing mobile 
applications: &lt;em&gt;Android&lt;/em&gt; and &lt;em&gt;iOS&lt;/em&gt;. For the first time in my whole infosec career path I was disassembling &lt;a href="http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis/"&gt;iOS&lt;/a&gt; applications ...&lt;/p&gt;</summary><category term="misc"></category><category term="infosec"></category><category term="appsec"></category><category term="hacking"></category><category term="network"></category></entry><entry><title>Import Burp cert into Android</title><link href="http://blog.dornea.nu/2014/12/03/import-burp-cert-into-android" rel="alternate"></link><updated>2014-12-03T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-12-03:2014/12/03/import-burp-cert-into-android</id><summary type="html">&lt;p&gt;As already mentioned in previous posts, in order to install Burps CA certificate, just go to the IP address Burp is listening on, followed by &lt;em&gt;/cert&lt;/em&gt;, e.g. &lt;code&gt;http://127.0.0.1:8080/cert&lt;/code&gt;. There you can download the cert and push it to your Android device. Usually you ...&lt;/p&gt;</summary><category term="note"></category><category term="burp"></category><category term="android"></category></entry><entry><title>HowTo: Proxy Non-Proxy-Aware Android Applications through Burp</title><link href="http://blog.dornea.nu/2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp" rel="alternate"></link><updated>2014-12-02T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-12-02:2014/12/02/howto-proxy-non-proxy-aware-android-applications-through-burp</id><summary type="html">&lt;p&gt;Proxying HTTP(s) traffic from Android devices through Burp should be actually no magic. Nevertheless you'll have to take some important steps into consideration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install Burps &lt;strong&gt;CA cert&lt;/strong&gt; on the device&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I usually access Burp directly and download the cert file (&lt;code&gt;cacert.crt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If Burp is listening on &lt;code&gt;192 ...&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><category term="android"></category><category term="appsec"></category><category term="linux"></category><category term="howto"></category><category term="mobile"></category><category term="burp"></category></entry><entry><title>Re-Root Nexus 10 4.x</title><link href="http://blog.dornea.nu/2014/12/02/re-root-nexus-10-4x" rel="alternate"></link><updated>2014-12-02T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-12-02:2014/12/02/re-root-nexus-10-4x</id><summary type="html">&lt;p&gt;I wrote this since I always forget the 2 essential steps in order to regain &lt;strong&gt;root&lt;/strong&gt; on a Nexus 10 device which has been updated over-the-air. Basically you'll have to flash a new &lt;strong&gt;recovery&lt;/strong&gt; image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# ~/android-sdk/platform-tools/fastboot flash recovery recovery-clockwork-touch-6.0.4.3-manta.img
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before booting into &lt;em&gt;recovery ...&lt;/em&gt;&lt;/p&gt;</summary><category term="note"></category><category term="android"></category></entry><entry><title>Using Graphviz with Pelican and liquid tags</title><link href="http://blog.dornea.nu/2014/11/13/using-graphviz-with-pelican-and-liquid-tags" rel="alternate"></link><updated>2014-11-13T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-11-13:2014/11/13/using-graphviz-with-pelican-and-liquid-tags</id><summary type="html">&lt;p&gt;I really like keeping things simple. And I also like generating figures from code using &lt;code&gt;Graphviz&lt;/code&gt;. And since there was no Graphviz &lt;strong&gt;plugin&lt;/strong&gt; for &lt;strong&gt;pelican&lt;/strong&gt; I wrote my own one. &lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/liquid_tags"&gt;liquid tags&lt;/a&gt; I wanted to get my graphviz code rendered and automatically included as a &lt;strong&gt;base64 encoded&lt;/strong&gt; image in ...&lt;/p&gt;</summary><category term="pelican"></category><category term="graphviz"></category><category term="blog"></category></entry><entry><title>HowTo: iOS Apps - Static analysis</title><link href="http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis" rel="alternate"></link><updated>2014-10-29T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-10-29:2014/10/29/howto-ios-apps-static-analysis</id><summary type="html">&lt;p&gt;In this short article I'll try to explain what are the main steps to analyze an iOS app. Since I've writen similar posts related to &lt;a href="/tag/android/"&gt;Android&lt;/a&gt; I thought I could devote some of spare time writing about the steps required to analyze iOS apps/binaries. But first of ...&lt;/p&gt;</summary><category term="coding"></category><category term="security"></category><category term="ios"></category><category term="appsec"></category><category term="howto"></category><category term="mobile"></category></entry><entry><title>Generate all IP addresses from ASN</title><link href="http://blog.dornea.nu/2014/09/17/generate-all-ip-addresses-from-asn" rel="alternate"></link><updated>2014-09-17T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-09-17:2014/09/17/generate-all-ip-addresses-from-asn</id><summary type="html">&lt;p&gt;Sometimes you need to know if a certain IP (or several ones) are within an IP range or belong to a certain &lt;a href="http://en.wikipedia.org/wiki/Autonomous_System_%28Internet%29"&gt;ASN&lt;/a&gt;. Let's give it a try and generate all possible IP addresses for &lt;a href="http://telekom.de"&gt;telekom.de&lt;/a&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ dig telekom.de 
...
telekom.de.     86346   IN  A   46.29.100.76 ...&lt;/pre&gt;&lt;/div&gt;</summary><category term="networking"></category><category term="hacking"></category></entry><entry><title>HowTo: Androguard with Docker</title><link href="http://blog.dornea.nu/2014/09/12/howto-androguard-with-docker" rel="alternate"></link><updated>2014-09-12T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-09-12:2014/09/12/howto-androguard-with-docker</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Meanwhile I think I&amp;#39;ve felt in love with &lt;em&gt;Androguard&lt;/em&gt;. I love its Pythonic way handling things and its visualizations features. As many of you have noticed, you can run Androguard inside a &lt;em&gt;Docker&lt;/em&gt; container. I&amp;#39;ve never used Docker before so it was about time. You can find some ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="ipython"></category><category term="python"></category><category term="androguard"></category><category term="android"></category><category term="docker"></category><category term="howto"></category><category term="networking"></category><category term="mobile"></category></entry><entry><title>Using JQuery DataTables with IPython</title><link href="http://blog.dornea.nu/2014/08/28/using-jquery-datatables-with-ipython" rel="alternate"></link><updated>2014-08-28T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-08-28:2014/08/28/using-jquery-datatables-with-ipython</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I thought this might be interesting enough to share with you. Every time I&amp;#39;m working with DataFrames I somehow miss the search feature: I&amp;#39;d like to search for certain patterns inside the columns and rows. I used to use &lt;a href="https://datatables.net"&gt;JQuery DataTables&lt;/a&gt; for &lt;a href="http://dornea.nu/projects/netgrafio"&gt;netgrafio&lt;/a&gt;. But I couldn&amp;#39;t find ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="ipython"></category><category term="python"></category><category term="jquery"></category><category term="javascript"></category></entry><entry><title>HowTo: Debug Android APKs with Eclipse and DDMS</title><link href="http://blog.dornea.nu/2014/08/21/howto-debug-android-apks-with-eclipse-and-ddms" rel="alternate"></link><updated>2014-08-21T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-08-21:2014/08/21/howto-debug-android-apks-with-eclipse-and-ddms</id><summary type="html">&lt;p&gt;Simply out of necessity I've written this mini-tutorial how debug android APKs using Eclipse and &lt;a href="http://developer.android.com/tools/debugging/ddms.html"&gt;DDMS&lt;/a&gt;. 
After hours of wild googling these are the steps to make your APK debuggable under Eclipse. I'll be using the &lt;code&gt;FakeBanker&lt;/code&gt; APK reverse-engineered in previous &lt;a href="http://blog.dornea.nu/tag/android/"&gt;articles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="revisions"&gt;Revisions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;UPDATE 2014-12-09&lt;/em&gt;&lt;/strong&gt;: &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before looking at ...&lt;/p&gt;</summary><category term="android"></category><category term="eclipse"></category><category term="java"></category><category term="debug"></category><category term="howto"></category><category term="mobile"></category><category term="fakebanker"></category></entry><entry><title>Python for Data Analysis</title><link href="http://blog.dornea.nu/2014/08/06/python-for-data-analysis" rel="alternate"></link><updated>2014-08-06T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-08-06:2014/08/06/python-for-data-analysis</id><summary type="html">&lt;p&gt;I use &lt;code&gt;Python&lt;/code&gt; on daily basis. I love &lt;code&gt;IPython&lt;/code&gt; and use it as my main &lt;em&gt;shell&lt;/em&gt; for every day tasks. So it was a matter of time until I got captivated by &lt;code&gt;panda&lt;/code&gt;, &lt;code&gt;scipy&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. I've ordered myself &lt;a href="http://shop.oreilly.com/product/0636920023784.do"&gt;&lt;em&gt;Python for Data Analysis&lt;/em&gt;&lt;/a&gt; in order to get more familiar ...&lt;/p&gt;</summary><category term="science"></category><category term="web"></category><category term="python"></category><category term="ipython"></category><category term="books"></category></entry><entry><title>Web Application Survey Tutorial</title><link href="http://blog.dornea.nu/2014/08/06/web-application-survey-tutorial" rel="alternate"></link><updated>2014-08-06T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-08-06:2014/08/06/web-application-survey-tutorial</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Suppose you get a list of some URLs and you are asked to &amp;quot;investigate&amp;quot; them. The list is full of some random URLs related to your company and nobody knows about. You don&amp;#39;t have a clue who is responsible for them nor which applications (if any) are running behind ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="ipython"></category><category term="appsec"></category><category term="web"></category><category term="python"></category></entry><entry><title>Android Dynamic Code Analysis - Mastering DroidBox</title><link href="http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox" rel="alternate"></link><updated>2014-08-05T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-08-05:2014/08/05/android-dynamic-code-analysis-mastering-droidbox</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this article I&amp;#39;ll have a a closer look at &lt;a href="https://code.google.com/p/droidbox/"&gt;DroidBox&lt;/a&gt; which provides a mobile sandbox to look at Android applications. In the previous &lt;a href="/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/"&gt;post&lt;/a&gt; I&amp;#39;ve dealt with &lt;em&gt;static code analysis&lt;/em&gt;. This time will start running our malicious application and look at the &amp;quot;noise&amp;quot; it generates. That would ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="android"></category><category term="hacking"></category><category term="network"></category><category term="security"></category><category term="ipython"></category><category term="code"></category><category term="sca"></category><category term="androguard"></category><category term="re"></category><category term="droidbox"></category><category term="mobile"></category><category term="fakebanker"></category></entry><entry><title>Disect Android APKs like a Pro - Static code analysis</title><link href="http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis" rel="alternate"></link><updated>2014-07-07T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-07-07:2014/07/07/disect-android-apks-like-a-pro-static-code-analysis</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I&amp;#39;ve started writing this &lt;a href="http://ipython.org/notebook.html"&gt;IPython notebook&lt;/a&gt; in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available &lt;a href="http://en.wikipedia.org/wiki/Reverse_engineering"&gt;RE&lt;/a&gt; tools and learn more about their pros &amp;amp; cos. In particular I had a closer ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="android"></category><category term="hacking"></category><category term="network"></category><category term="security"></category><category term="ipython"></category><category term="code"></category><category term="sca"></category><category term="androguard"></category><category term="re"></category><category term="mobile"></category><category term="fakebanker"></category></entry><entry><title>On Java, OpenSSL, Crypto, Blowfish and stuff</title><link href="http://blog.dornea.nu/2014/07/01/on-java-openssl-crypto-blowfish-and-stuff" rel="alternate"></link><updated>2014-07-01T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-07-01:2014/07/01/on-java-openssl-crypto-blowfish-and-stuff</id><summary type="html">&lt;p&gt;During some Android malware analysis I came along some Java routines which were meant to decrypt/encrypt some content. Nothing special about it. The key had to be extracted from a file and the encrypted file was in Base64. After unsuccessfully trying &lt;strong&gt;openssl&lt;/strong&gt; in order to decrypt the file I ...&lt;/p&gt;</summary><category term="java"></category><category term="cryptography"></category><category term="crypto"></category><category term="openssl"></category></entry><entry><title>WhatsApp bot</title><link href="http://blog.dornea.nu/2014/06/29/whatsapp-bot" rel="alternate"></link><updated>2014-06-29T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-06-29:2014/06/29/whatsapp-bot</id><summary type="html">&lt;p&gt;&lt;img src="http://dl.dornea.nu/img/2014/9435906d7dc8d3f01b92cebc191eb9ab.png"&gt;&lt;/p&gt;
&lt;p&gt;This is what I've received yesterday from some phone number I don't really know. BTW: Which countrys prefix is that? The crazy thing about it: Every time I was sending a message to it, it responded with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you. We have received your message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had a look ...&lt;/p&gt;</summary><category term="whatsapp"></category><category term="wtf"></category></entry><entry><title>Migrate this blog from Octopress to Pelican</title><link href="http://blog.dornea.nu/2014/06/18/migrate-this-blog-from-octopress-to-pelican" rel="alternate"></link><updated>2014-06-18T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-06-18:2014/06/18/migrate-this-blog-from-octopress-to-pelican</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;A few weeks ago I&amp;#39;be migrated my whole blog from Wordpress to Octopress. Meanwhile I&amp;#39;ve discovered &lt;code&gt;Pelican&lt;/code&gt; which is the Pythonic alternative to Octopress. To be honest: The main reason I&amp;#39;m using Pelican instead of Octopress is the ability to import/include &lt;code&gt;IPython notebooks&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;After I&amp;#39;ve ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="blog"></category><category term="ipython"></category><category term="python"></category><category term="pelican"></category><category term="octopress"></category></entry><entry><title>Googles XSS Game - Solutions</title><link href="http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions" rel="alternate"></link><updated>2014-06-02T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-06-02:2014/06/02/googles-xss-game-solutions</id><summary type="html">&lt;p&gt;These are my steps how I've solved the &lt;a href="https://xss-game.appspot.com/"&gt;XSS Game&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="level-1"&gt;Level 1&lt;/h2&gt;
&lt;p&gt;This is the most obvious and easiest one. Just insert following code and you're done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="level-2"&gt;Level 2&lt;/h2&gt;
&lt;p&gt;Since the &lt;code&gt;script&lt;/code&gt; won't work you'll have to think of another tags to ...&lt;/p&gt;</summary><category term="web"></category><category term="wargames"></category><category term="security"></category><category term="coding"></category><category term="hacking"></category></entry><entry><title>BerlinSides 0x05</title><link href="http://blog.dornea.nu/2014/05/27/berlinsides-0x05" rel="alternate"></link><updated>2014-05-27T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-05-27:2014/05/27/berlinsides-0x05</id><summary type="html">&lt;p&gt;The &lt;a href="http://berlinsides.org/"&gt;&lt;strong&gt;BerlinSides&lt;/strong&gt;&lt;/a&gt; is a conference from hacker for hacker. This years motto was: &lt;strong&gt;...you ain't listening&lt;/strong&gt;.
All my greetings go to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nullsecurity.net"&gt;nullsecurity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/thealuc"&gt;Aluc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.universalhall.de/"&gt;Universal Hall Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Nullsecurity @ BerlinSides 0x05" src="http://dl.dornea.nu/img/2014/berlinsides/382f305b366cbb0d544207ae28eff003.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="BerlinSides" src="http://dl.dornea.nu/img/2014/berlinsides/48aa1cf9082a5fab4172f49cb2f890c3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="BerlinSides" src="http://dl.dornea.nu/img/2014/berlinsides/799eb9f276fed2ef043b83af21c41094.jpg" /&gt;&lt;/p&gt;</summary><category term="events"></category><category term="hacking"></category><category term="security"></category></entry><entry><title>HowTo: Write pentest reports the easy way</title><link href="http://blog.dornea.nu/2014/05/20/howto-write-pentest-reports-the-easy-way" rel="alternate"></link><updated>2014-05-20T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-05-20:2014/05/20/howto-write-pentest-reports-the-easy-way</id><summary type="html">&lt;p&gt;In this post I'll try to share an idea I've had regarding pentest reports. Most of you surely have
their own methods and tools to create nice looking reports after have done some pentesting.
Since I try to keep things simple I'll give you a rough idea ...&lt;/p&gt;</summary><category term="graphviz"></category><category term="pandoc"></category></entry><entry><title>24h Android sniffing using tcpdump - IPython Notebook Version</title><link href="http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version" rel="alternate"></link><updated>2014-01-23T00:00:00+01:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2014-01-23:2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Motivation"&gt;Motivation&lt;a class="anchor-link" href="#Motivation"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I&amp;#39;ve started this little project since I was mainly interested in the data my smartphone is sending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the ...&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="android"></category><category term="hacking"></category><category term="network"></category><category term="security"></category><category term="ipython"></category></entry><entry><title>Sommersemester 2010 online!</title><link href="http://blog.dornea.nu/2010/07/26/sommersemester-2010-online" rel="alternate"></link><updated>2010-07-26T00:00:00+02:00</updated><author><name>Victor Dorneanu</name></author><id>tag:blog.dornea.nu,2010-07-26:2010/07/26/sommersemester-2010-online</id><summary type="html">&lt;p&gt;Ich habe mir die MÃ¼he gemacht, in meinem Studium fÃ¼r ein bisschen Ordnung zu sorgen. Ab sofort sind die Vorlesungsmaterialien sowie die Aufgabenzettel (+LÃ¶sungen) des letzten Semesters (Sommersemester 2010) &lt;a href="http://dornea.nu/studium/sose2010"&gt;online&lt;/a&gt;!&amp;nbsp; Solltet ihr geheime Skripte und Aufgabensammlungen bei euch auf der Festplatte aufbewahren, schreibt mir ne Mail. Vielleicht einigen wir ...&lt;/p&gt;</summary><category term="misc"></category></entry></feed>